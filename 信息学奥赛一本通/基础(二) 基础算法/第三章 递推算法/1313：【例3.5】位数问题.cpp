//
//  1313：【例3.5】位数问题.cpp
//  algorithm
//
//  Created by Yamaxanadu Shikieiki on 2024/1/23.
//

/*
 1313：【例3.5】位数问题

 时间限制: 1000 ms         内存限制: 65536 KB
 提交数: 34910     通过数: 19053
 【题目描述】
 在所有的N
 位数中，有多少个数中有偶数个数字3
 ?由于结果可能很大，你只需要输出这个答案对12345
 取余的值。

 【输入】
 读入一个数N(N≤1000)
 。

 【输出】
 输出有多少个数中有偶数个数字3
 。

 【输入样例】
 2
 【输出样例】
 73

 */

// 0-9中，只有3含有一个3，其余含有0个3，故有9个数含有偶数个数字3
// 0也是偶数
//   1位数                 2位数                       3位数                    4位数
// 偶     奇          偶           奇             偶            奇          偶         奇
// 0      3    9*奇[1]+偶[1]  9*偶[1]+基[1]  9*奇[2]+偶[2]  9*偶[2]+基[2] 8*奇[3]+偶[3]  8*偶[2]+基[2]
// 1              前一个奇数补一个3为偶，原来的偶保留       原来的偶数补一个3为奇，原来的奇保留
// 2
// 4
// 5
// 6
// 7
// 8
// 9

// 边界
// 偶[1]=9, 奇[1] = 1;
// 递推关系式
// t = 9, 若i为最高位则t = 8
// 偶[i]=t*偶[i - 1] + 奇*[i - 1]

// #include <bits/stdc++.h>
#include <iostream>

using namespace std;

const int N = 1e3+10;

int even[N] = {0, 9};
int odd[N] = {0, 1};

int main(int argc, const char * argv[])
{
    int n, t = 9, m = 12345;
    cin >> n;
    for(int i = 2; i <= n; i++)
    {
        if(i == n) // 最高位不能为0
            t = 8;
        odd[i] = (t * odd[i - 1] %m + even[i - 1] %m)%m;
        even[i] = (t * even[i - 1] %m + odd[i - 1] %m)%m;
    }
    cout << even[n] << endl;
    return 0;
}
