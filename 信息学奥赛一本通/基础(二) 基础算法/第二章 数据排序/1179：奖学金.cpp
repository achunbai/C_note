//
//  1179：奖学金.cpp
//  algorithm
//
//  Created by Yamaxanadu Shikieiki on 2024/1/19.
//

/*
 1179：奖学金

 时间限制: 1000 ms         内存限制: 65536 KB
 提交数: 50468     通过数: 24894
 【题目描述】
 某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5
 名学生发奖学金。期末，每个学生都有3
 门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。

 任务：先根据输入的3
 门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前5
 名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是:

 7 279
 5 279
 这两行数据的含义是:总分最高的两个同学的学号依次是7
 号、5
 号。这两名同学的总分都是 279
  (总分等于输入的语文、数学、英语三科成绩之和) ，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是:

 5 279
 7 279
 则按输出错误处理，不能得分。

 【输入】
 包含n+1
 行:

 第1
 行为一个正整数n
 （小于300
 ），表示该校参加评选的学生人数。

 第2
 到n+1
 行，每行有3
 个用空格隔开的数字，每个数字都在0
 到100
 之间。第j
 行的3
 个数字依次表示学号为 j−1
  的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1∼n
  (恰好是输入数据的行号减1
 )。

 【输出】
 共有5
 行，每行是两个用空格隔开的正整数，依次表示前5
 名学生的学号和总分。

 【输入样例】
 6
 90 67 80
 87 66 91
 78 89 91
 88 99 77
 67 89 64
 78 89 98
 【输出样例】
 6 265
 4 264
 3 258
 2 244
 1 237
 【提示】
 样例输入#2：

 8
 80 89 89
 88 98 78
 90 67 80
 87 66 91
 78 89 91
 88 99 77
 67 89 64
 78 89 98
 样例输出#2：

 8 265
 2 264
 6 264
 1 258
 5 258
 */

#include <bits/stdc++.h>

using namespace std;

const int N = 1e3 + 10;

struct Student
{
    int id;
    int Chinese;
    int Math;
    int English;
    int sum;
}s[N];

bool cmp(Student a, Student b)
{
    if(a.sum != b.sum)
        return a.sum > b.sum;
    else if(a.Chinese != b.Chinese)
        return a.Chinese > b.Chinese;
    else
        return a.id < b.id;
}

int main(int argc, const char * argv[])
{
    int n;
    cin >> n;
    for(int i = 1; i <= n; i++)
    {
        cin >> s[i].Chinese >> s[i].Math >> s[i].English;
        s[i].sum = s[i].Chinese + s[i].Math + s[i].English;
        s[i].id = i;
    }
    sort(s, s + n + 1, cmp);
    for(int i = 0; i < 5; i++)
    {
        cout << s[i].id << " " << s[i].sum << endl;
    }
    return 0;
}
